package br.edu.utfpr.stratvision.patlan;

/* Generated By:JavaCC: Do not edit this line. LRPRGParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LRPRGParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PATTERN = 5;
  /** RegularExpression Id. */
  int DESCRIPTION = 6;
  /** RegularExpression Id. */
  int WEIGHT = 7;
  /** RegularExpression Id. */
  int ACTORS = 8;
  /** RegularExpression Id. */
  int PIECESET = 9;
  /** RegularExpression Id. */
  int FORMAT = 10;
  /** RegularExpression Id. */
  int SCENARIO = 11;
  /** RegularExpression Id. */
  int MOVES = 12;
  /** RegularExpression Id. */
  int PRECONDITION = 13;
  /** RegularExpression Id. */
  int POSTCONDITION = 14;
  /** RegularExpression Id. */
  int AUTHOR = 15;
  /** RegularExpression Id. */
  int WHITE = 16;
  /** RegularExpression Id. */
  int BLACK = 17;
  /** RegularExpression Id. */
  int SQUARECOLOR = 18;
  /** RegularExpression Id. */
  int ISINFILE = 19;
  /** RegularExpression Id. */
  int INSINRANK = 20;
  /** RegularExpression Id. */
  int FILE = 21;
  /** RegularExpression Id. */
  int RANK = 22;
  /** RegularExpression Id. */
  int VALUE = 23;
  /** RegularExpression Id. */
  int ONEDGE = 24;
  /** RegularExpression Id. */
  int ONCORNER = 25;
  /** RegularExpression Id. */
  int TYPEOF = 26;
  /** RegularExpression Id. */
  int SENTRY = 27;
  /** RegularExpression Id. */
  int RAM = 28;
  /** RegularExpression Id. */
  int MAXDISTANCE = 29;
  /** RegularExpression Id. */
  int MINDISTANCE = 30;
  /** RegularExpression Id. */
  int RANKDISTANCE = 31;
  /** RegularExpression Id. */
  int FILEDISTANCE = 32;
  /** RegularExpression Id. */
  int MANDISTANCE = 33;
  /** RegularExpression Id. */
  int SQUARERULE = 34;
  /** RegularExpression Id. */
  int SQUAREOWNER = 35;
  /** RegularExpression Id. */
  int MYDEFENSES = 36;
  /** RegularExpression Id. */
  int YOURDEFENSES = 37;
  /** RegularExpression Id. */
  int DEFENSES = 38;
  /** RegularExpression Id. */
  int MYDEFENSESVALUE = 39;
  /** RegularExpression Id. */
  int YOURDEFENSESVALUE = 40;
  /** RegularExpression Id. */
  int DEFENSESVALUE = 41;
  /** RegularExpression Id. */
  int RELATIVEVALUEOF = 42;
  /** RegularExpression Id. */
  int MYDIRDEFENSES = 43;
  /** RegularExpression Id. */
  int YOURDIRDEFENSES = 44;
  /** RegularExpression Id. */
  int DIRECTDEFENSES = 45;
  /** RegularExpression Id. */
  int MYRELDEFENSESVALUE = 46;
  /** RegularExpression Id. */
  int YOURRELDEFENSESVALUE = 47;
  /** RegularExpression Id. */
  int RELDFENSESVALUE = 48;
  /** RegularExpression Id. */
  int MYDIRDEFENSESVALUE = 49;
  /** RegularExpression Id. */
  int YOURDIRDEFENSESVALUE = 50;
  /** RegularExpression Id. */
  int DIRDEFENSESVALUE = 51;
  /** RegularExpression Id. */
  int WEDGES = 52;
  /** RegularExpression Id. */
  int PIECESDEFENDING = 53;
  /** RegularExpression Id. */
  int MOVESOF = 54;
  /** RegularExpression Id. */
  int SAFEMOVESOF = 55;
  /** RegularExpression Id. */
  int KINGPATH = 56;
  /** RegularExpression Id. */
  int CHECKPATTERN = 57;
  /** RegularExpression Id. */
  int KINGOPPOSITION = 58;
  /** RegularExpression Id. */
  int BLOCKEDPAWNS = 59;
  /** RegularExpression Id. */
  int KING = 60;
  /** RegularExpression Id. */
  int QUEEN = 61;
  /** RegularExpression Id. */
  int ROOK = 62;
  /** RegularExpression Id. */
  int BISHOP = 63;
  /** RegularExpression Id. */
  int KNIGHT = 64;
  /** RegularExpression Id. */
  int PAWN = 65;
  /** RegularExpression Id. */
  int OWNER = 66;
  /** RegularExpression Id. */
  int FULLOWNER = 67;
  /** RegularExpression Id. */
  int WILDCARD = 68;
  /** RegularExpression Id. */
  int OP_AND = 69;
  /** RegularExpression Id. */
  int OP_OR = 70;
  /** RegularExpression Id. */
  int FALSE = 71;
  /** RegularExpression Id. */
  int TRUE = 72;
  /** RegularExpression Id. */
  int DIMENSION = 73;
  /** RegularExpression Id. */
  int OP_ATTACK = 74;
  /** RegularExpression Id. */
  int OP_IATTACK = 75;
  /** RegularExpression Id. */
  int OP_DEFENSE = 76;
  /** RegularExpression Id. */
  int OP_IDEFENSE = 77;
  /** RegularExpression Id. */
  int OP_MOVE = 78;
  /** RegularExpression Id. */
  int OP_BLOCK = 79;
  /** RegularExpression Id. */
  int OP_RIGHTSIDE = 80;
  /** RegularExpression Id. */
  int OP_LEFTSIDE = 81;
  /** RegularExpression Id. */
  int OP_TOPSIDE = 82;
  /** RegularExpression Id. */
  int OP_BOTTOMSIDE = 83;
  /** RegularExpression Id. */
  int OP_SE = 84;
  /** RegularExpression Id. */
  int OP_NW = 85;
  /** RegularExpression Id. */
  int OP_NE = 86;
  /** RegularExpression Id. */
  int OP_SW = 87;
  /** RegularExpression Id. */
  int OP_PATTACK = 88;
  /** RegularExpression Id. */
  int OP_PDEFENSE = 89;
  /** RegularExpression Id. */
  int OP_CHECKMATE = 90;
  /** RegularExpression Id. */
  int OP_NOT = 91;
  /** RegularExpression Id. */
  int SIGNAL = 92;
  /** RegularExpression Id. */
  int UINT = 93;
  /** RegularExpression Id. */
  int REAL = 94;
  /** RegularExpression Id. */
  int TEXT = 95;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<PATTERN>",
    "<DESCRIPTION>",
    "<WEIGHT>",
    "<ACTORS>",
    "<PIECESET>",
    "<FORMAT>",
    "<SCENARIO>",
    "<MOVES>",
    "<PRECONDITION>",
    "<POSTCONDITION>",
    "<AUTHOR>",
    "<WHITE>",
    "<BLACK>",
    "<SQUARECOLOR>",
    "<ISINFILE>",
    "<INSINRANK>",
    "<FILE>",
    "<RANK>",
    "<VALUE>",
    "<ONEDGE>",
    "<ONCORNER>",
    "<TYPEOF>",
    "<SENTRY>",
    "<RAM>",
    "<MAXDISTANCE>",
    "<MINDISTANCE>",
    "<RANKDISTANCE>",
    "<FILEDISTANCE>",
    "<MANDISTANCE>",
    "<SQUARERULE>",
    "<SQUAREOWNER>",
    "<MYDEFENSES>",
    "<YOURDEFENSES>",
    "<DEFENSES>",
    "<MYDEFENSESVALUE>",
    "<YOURDEFENSESVALUE>",
    "<DEFENSESVALUE>",
    "<RELATIVEVALUEOF>",
    "<MYDIRDEFENSES>",
    "<YOURDIRDEFENSES>",
    "<DIRECTDEFENSES>",
    "<MYRELDEFENSESVALUE>",
    "<YOURRELDEFENSESVALUE>",
    "<RELDFENSESVALUE>",
    "<MYDIRDEFENSESVALUE>",
    "<YOURDIRDEFENSESVALUE>",
    "<DIRDEFENSESVALUE>",
    "<WEDGES>",
    "<PIECESDEFENDING>",
    "<MOVESOF>",
    "<SAFEMOVESOF>",
    "<KINGPATH>",
    "<CHECKPATTERN>",
    "<KINGOPPOSITION>",
    "<BLOCKEDPAWNS>",
    "<KING>",
    "<QUEEN>",
    "<ROOK>",
    "<BISHOP>",
    "<KNIGHT>",
    "<PAWN>",
    "<OWNER>",
    "<FULLOWNER>",
    "<WILDCARD>",
    "<OP_AND>",
    "<OP_OR>",
    "<FALSE>",
    "<TRUE>",
    "<DIMENSION>",
    "<OP_ATTACK>",
    "<OP_IATTACK>",
    "<OP_DEFENSE>",
    "<OP_IDEFENSE>",
    "<OP_MOVE>",
    "<OP_BLOCK>",
    "<OP_RIGHTSIDE>",
    "<OP_LEFTSIDE>",
    "<OP_TOPSIDE>",
    "<OP_BOTTOMSIDE>",
    "<OP_SE>",
    "<OP_NW>",
    "<OP_NE>",
    "<OP_SW>",
    "<OP_PATTACK>",
    "<OP_PDEFENSE>",
    "<OP_CHECKMATE>",
    "<OP_NOT>",
    "<SIGNAL>",
    "<UINT>",
    "<REAL>",
    "<TEXT>",
    "\";\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\"<\"",
    "\">\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\"!=\"",
    "\"<=\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
  };

}
